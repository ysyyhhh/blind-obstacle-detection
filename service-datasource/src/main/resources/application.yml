server:
  port: 8086
swagger:
  enabled: true
  base-package: cc.yysy.servicedatasource
  version: V1.0
  description: 数据源
  terms-of-service-url: http://localhost:8005/doc.html
spring:
#redis配置
#Redis服务器地址
  redis:
    host: 127.0.0.1
  #Redis服务器连接端口
    port: 6379
  #Redis数据库索引（默认为0）
    database: 0
    jedis:
      pool:
        max-active: 50
        max-wait: 3000
        max-idle: 20
        min-idle: 2
    timeout: 5000
#  #连接池最大阻塞等待时间（使用负值表示没有限制）
#  spring.redis.jedis.pool.max-wait=3000
#  #连接池中的最大空闲连接
#  spring.redis.jedis.pool.max-idle=20
#  #连接池中的最小空闲连接
#  spring.redis.jedis.pool.min-idle=2
#  #连接超时时间（毫秒）·
#  spring.redis.timeout=5000
  rabbitmq:
    host: localhost
    port: 5672
    username: remote
    password: REDACTED
  application:
    name: service-datasource
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/blind_obstacle_detection?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&useSSL=false
    username: remote
    password: REDACTED
#  jpa:
#    properties:
#      hibernate:
#        hbm2ddl:
#          auto: update
#        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
  cloud:
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848
  jackson:
    date-format: yyyy-MM-dd
    time-zone: Asia/Shanghai
mybatis:
  configuration:
    map-underscore-to-camel-case: true
##  mapper-locations: classpath*:mapper/*.xml
#logging:
#  config: logback-timetable.xml
#  level:
#    cc:
#      yysy:
#        apigateway: info
minio:
  endpoint: http://127.0.0.1:9000
  accessKey: admin
  secretKey: minioadmin
  bucketName: obstacle-raw